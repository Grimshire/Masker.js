class MaskerValidator{static triggerAllValidations(){document.querySelectorAll('[masker]').forEach(el=>{el.dispatchEvent(new Event('blur'))});const formErrors=[];const errorSpans=document.getElementsByClassName('error-msg');Array.from(errorSpans).forEach(span=>{if(span.style.display!=='none'&&span.textContent.trim()!==''){const message=span.textContent.trim();const inputId=span.dataset.errorFor;const inputElement=document.getElementById(inputId);const inputTitle=inputElement?(inputElement.title||inputElement.name):'Field';const label=document.querySelector(`label[for="${inputId}"]`);formErrors.push({id:inputId,title:inputTitle,message:message})}});return formErrors}
static validate(el,priority={'required':1,'format':2,'complex':3}){const maskerAttr=el.getAttribute('masker')||'';const checkRequired=()=>{if(el.hasAttribute('required')||maskerAttr.includes('required')){return this.validateRequired(el)}
return null};const checkFormat=()=>{if(el.value&&el.value!==el.placeholder){if(maskerAttr.startsWith('date'))return this.validateDate(el);if(maskerAttr.startsWith('email'))return this.validateEmail(el);if(maskerAttr.startsWith('time'))return this.validateTime(el);}
return null};const checkComplex=()=>{if(el.dataset.pair){const pairName=el.dataset.pair;const sd=document.querySelector(`[masker*="date begin"][data-pair="${pairName}"]`);const st=document.querySelector(`[masker*="time begin"][data-pair="${pairName}"]`);const ed=document.querySelector(`[masker*="date end"][data-pair="${pairName}"]`);const et=document.querySelector(`[masker*="time end"][data-pair="${pairName}"]`);if(sd&&ed){return this.validateDateTimeRange(sd,st,ed,et)}}
return null};const checkFunctions={required:checkRequired,format:checkFormat,complex:checkComplex};const sortedChecks=Object.keys(priority).sort((a,b)=>priority[a]-priority[b]);for(const priFunction of sortedChecks){if(checkFunctions[priFunction]){const error=checkFunctions[priFunction]();if(error){return error}}}
return null}
static getOrCreateErrorContainer(el){if(!el.id){console.error("Element must have an id to show errors.",el);return null}
let container=document.querySelector(`[data-error-for="${el.id}"]`);if(!container){container=document.createElement('span');container.className='error-msg';container.setAttribute('data-error-for',el.id);el.insertAdjacentElement('afterend',container)}
return container}
static displayError(el,msg){const c=this.getOrCreateErrorContainer(el);if(!c)return;c.textContent=msg;c.style.display='inline'}
static clearError(el){const c=this.getOrCreateErrorContainer(el);if(!c)return;c.textContent='';c.style.display='none'}
static validateRequired(el){const isSelect=el.tagName.toLowerCase()==='select';const isInvalid=isSelect?!el.value||el.value.trim()==='':!el.value||el.value===el.placeholder;if(isInvalid){return el.getAttribute('data-errMsg')||'This field is required.'}
return null}
static validateDate(el){const v=el.value;if(!v||v===el.placeholder)return null;const mask=el.getAttribute('masker')||'';const rawFmt=el.getAttribute('data-format')||'MDY';if(rawFmt==='US-MIL')return null;const alias={MDY:'MM/DD/YYYY',DMY:'DD/MM/YYYY',YMD:'YYYY/MM/DD','US-CIV':'MM/DD/YYYY'};const fmt=alias[rawFmt]||rawFmt;const nowY=new Date().getFullYear();const yi=fmt.indexOf('YYYY');const yText=v.substring(yi,yi+4);if(yi>=0&&yText.length===4&&!mask.includes('ancient future')){const y=parseInt(yText,10);if(mask.includes('ancient')&&y>nowY)return'Year cannot be in the future.';if(mask.includes('future')&&y<nowY)return'Year cannot be in the past.';if(mask.includes('2000')&&(y<2000||y>nowY))return `Year must be between 2000 and ${nowY}.`;if(mask.includes('1900')&&(y<1900||y>nowY))return `Year must be between 1900 and ${nowY}.`;if(!mask.includes('ancient')&&!mask.includes('1900')&&!mask.includes('2000')&&y<nowY)return `Year cannot be before ${nowY}.`}
const mi=fmt.indexOf('MM');if(mi>=0){const m=parseInt(v.substring(mi,mi+2),10);if(m<1||m>12)return'Month must be 01-12.'}
const di=fmt.indexOf('DD');if(di>=0){const d=parseInt(v.substring(di-1,di+1),10);if(d<1||d>31)return'Day must be 01-31.'}
return null}
static validateDateRange(startEl,endEl){if(!startEl.value||!endEl.value)return null;const d1=this.#toDate(startEl);const d2=this.#toDate(endEl);if(!d1||!d2)return null;if(d1>d2){const t1=startEl.title||'Start date';const t2=endEl.title||'End date';return startEl.dataset.errMsgRangeStart||`${t1} cannot be set after ${t2}`}
return null}
static validateEmail(el){if(!el.value)return null;const re=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(!re.test(el.value)){return el.getAttribute('data-errMsg')||'Please enter a valid email address.'}
return null}
static validateTime(el){const totalMinutes=this.#toTime(el);if(el.value&&totalMinutes===null){return'Please enter a valid time (HH:MM).'}
return null}
static findNextSelectWithPartialId(element,partialId){let nextSibling=element.nextElementSibling;while(nextSibling){if(nextSibling.tagName==='SELECT'&&nextSibling.id.includes(partialId)){return nextSibling}
nextSibling=nextSibling.nextElementSibling}
return null}
static validateDateTimeRange(sd,st,ed,et){const hasSD=sd&&sd.value&&sd.value!==sd.placeholder;const hasED=ed&&ed.value&&ed.value!==ed.placeholder;const t1=st?this.#toTime(st):null;const t2=et?this.#toTime(et):null;const hasST=t1!==null;const hasET=t2!==null;if(hasSD&&hasED&&!hasST&&!hasET){return this.validateDateRange(sd,ed)}
if(hasSD&&hasST&&hasED&&hasET){const d1_obj=this.#toDate(sd);const d2_obj=this.#toDate(ed);if(!d1_obj||!d2_obj)return null;if(d1_obj.toDateString()===d2_obj.toDateString()){if(t1>=t2){return'End time must be after start time on the same day.'}}else{const dt1=this.#toDateTime(sd,st);const dt2=this.#toDateTime(ed,et);if(!dt1||!dt2||dt1>=dt2){return'End date must be on or after the start date.'}}}
return null}
static #toDate(el){const raw=el.getAttribute('data-format')||'MDY';const alias={MDY:'MM/DD/YYYY',DMY:'DD/MM/YYYY',YMD:'YYYY/MM/DD','US-CIV':'MM/DD/YYYY'};const fmt=alias[raw]||raw;const parts=el.value.split(/[^0-9]/).map(n=>parseInt(n,10));let[mm,dd,yy]=[NaN,NaN,NaN];if(fmt==='MM/DD/YYYY')[mm,dd,yy]=parts;if(fmt==='DD/MM/YYYY')[dd,mm,yy]=parts;if(fmt==='YYYY/MM/DD')[yy,mm,dd]=parts;if([mm,dd,yy].some(n=>isNaN(n)))return null;return new Date(yy,mm-1,dd)}
static #toTime(el){if(el.type==='time'){const[h,m]=el.value.split(':').map(n=>parseInt(n,10));if(isNaN(h)||isNaN(m))return null;return h*60+m}
const $el=el.closest('td, .ms-dtinput');const hrs=parseInt(el.value,10);const minsSelect=$el.querySelector('select[id*="Minutes"]');const mins=minsSelect?parseInt(minsSelect.value,10):null;if(isNaN(hrs)||isNaN(mins))return null;return hrs*60+mins}
static #toDateTime(de,te){const dateObj=this.#toDate(de);const mins=this.#toTime(te);if(!dateObj||mins===null)return null;dateObj.setHours(Math.floor(mins/60),mins%60,0,0);return dateObj}}
class Masker{static init(){document.querySelectorAll('[masker], [required]').forEach(el=>{const m=el.getAttribute('masker');el.addEventListener('blur',e=>this.#handleValidation(e.target));if(m){if(m.startsWith('char-count'))this.#setupCharCounter(el);else if(m.startsWith('number'))this.#setupNumberMask(el);else if(m.startsWith('phone'))this.#setupPhoneMask(el);else if(m.startsWith('email'))this.#setupEmailMask(el);else if(m.startsWith('time'))this.#setupTimeField(el);else if(m.startsWith('date')){this.#setupDateMask(el);el.addEventListener('change',e=>this.#handleValidation(e.target))}}})}
static #handleValidation(el){setTimeout(()=>{this.#clearAllErrorsForPair(el);const errorMessage=MaskerValidator.validate(el);if(errorMessage){const errorAnchor=this.#findErrorAnchor(el);MaskerValidator.displayError(errorAnchor,errorMessage)}},300)}
static #findErrorAnchor(el){if(el.dataset.pair){const pairName=el.dataset.pair;const endEl=document.querySelector(`[masker*="end"][data-pair="${pairName}"]`);if(endEl){const timePartner=endEl.getAttribute('masker')?.includes('time')?endEl:document.querySelector(`[masker*="time end"][data-pair="${pairName}"]`);if(timePartner){return MaskerValidator.findNextSelectWithPartialId(timePartner,'Minutes')||timePartner}
return endEl}}
return el}
static #clearAllErrorsForPair(el){MaskerValidator.clearError(el);if(el.dataset.pair){const pairName=el.dataset.pair;document.querySelectorAll(`[data-pair="${pairName}"]`).forEach(p=>{MaskerValidator.clearError(p);if(p.getAttribute('masker')?.includes('time')){const minutesSelect=MaskerValidator.findNextSelectWithPartialId(p,'Minutes');if(minutesSelect)MaskerValidator.clearError(minutesSelect);}})}}
static #addRequiredValidation(el){const m=el.getAttribute('masker')||'';if(el.hasAttribute('required')||m.includes('required')){el.addEventListener('blur',e=>MaskerValidator.validateRequired(e.target));el.addEventListener('input',e=>MaskerValidator.clearError(e.target))}}
static #setupDateMask(el){const maskAttr=el.getAttribute('masker')||'';const rawFmt=el.getAttribute('data-format')||'MDY';const alias={MDY:'MM/DD/YYYY',DMY:'DD/MM/YYYY',YMD:'YYYY/MM/DD','US-CIV':'MM/DD/YYYY'};const fmt=alias[rawFmt]||rawFmt;const ph=fmt.replace(/[MDY]/g,'_');const visible=maskAttr.includes('visible');if(rawFmt==='US-MIL'){return this.#setupMilDateMask(el)}
if(visible)el.value=ph;const onInput=e=>{this.#applyDateMask(e,fmt);MaskerValidator.clearError(e.target)};el.addEventListener('focus',e=>{if(!e.target.value){e.target.value=ph;setTimeout(()=>e.target.setSelectionRange(0,0),0)}});el.addEventListener('input',onInput);el.addEventListener('keydown',e=>{if(e.target.value===ph&&e.key==='Backspace')e.target.value=''});el.addEventListener('blur',e=>{if(e.target.value===ph&&!visible){e.target.value=''}
const errorMessage=MaskerValidator.validate(e.target);let errorAnchor=e.target;if(e.target.dataset.pair){const timePartnerSel=`[masker*="time"][data-pair="${e.target.dataset.pair}"]`;const timePartner=document.querySelector(timePartnerSel);if(timePartner){const minutesSelect=MaskerValidator.findNextSelectWithPartialId(timePartner,'Minutes');if(minutesSelect)errorAnchor=minutesSelect}}
if(errorMessage){MaskerValidator.displayError(errorAnchor,errorMessage)}else{MaskerValidator.clearError(e.target);if(errorAnchor!==e.target)MaskerValidator.clearError(errorAnchor);}})}
static #setupMilDateMask(el){const placeholder='YYYY MMM DD';if(el.getAttribute('masker').includes('visible'))el.value=placeholder;el.addEventListener('input',this.#applyMilDateMask);el.addEventListener('focus',e=>{if(!e.target.value){e.target.value=placeholder;setTimeout(()=>e.target.setSelectionRange(0,0),0)}});el.addEventListener('keydown',e=>{if(e.target.value===placeholder&&e.key==='Backspace'){e.target.value=''}});el.addEventListener('blur',e=>{if(e.target.value===placeholder&&!el.getAttribute('masker').includes('visible')){e.target.value=''}
const errorMessage=MaskerValidator.validate(e.target);let errorAnchor=e.target;if(e.target.dataset.pair){const timePartnerSel=`[masker*="time"][data-pair="${e.target.dataset.pair}"]`;const timePartner=document.querySelector(timePartnerSel);if(timePartner){const minutesSelect=MaskerValidator.findNextSelectWithPartialId(timePartner,'Minutes');if(minutesSelect)errorAnchor=minutesSelect}}
if(errorMessage){MaskerValidator.displayError(errorAnchor,errorMessage)}else{MaskerValidator.clearError(e.target);if(errorAnchor!==e.target)MaskerValidator.clearError(errorAnchor);}})}
static #applyMilDateMask(e){const i=e.target;const c=i.value.replace(/[^A-Za-z0-9]/g,'').toUpperCase();let out=c.slice(0,4);if(c.length>4)out+=' '+c.slice(4,7);if(c.length>7)out+=' '+c.slice(7,9);i.value=out}
static #applyDateMask(e,fmt){const i=e.target;const c=i.value.replace(/\D/g,'');let out='',ci=0;for(let j=0;j<fmt.length&&ci<c.length;j++){out+=/[MDY]/.test(fmt[j])?c[ci++]:fmt[j]}
i.value=out}
static #setupCharCounter(el){const fb=document.querySelector(`[data-feedback-for="${el.id}"]`);if(!fb)return;const visible=el.getAttribute('masker').includes('visible');if(!visible)fb.style.display='none';else this.#updateCharCount(el,fb);el.addEventListener('keydown',e=>this.#limitInput(e));el.addEventListener('keyup',()=>this.#updateCharCount(el,fb))}
static #updateCharCount(el,fb){if(fb.style.display==='none')fb.style.display='block';const rawText=el.textContent||el.value||'';const cleanedText=rawText.replace(/\u200B/g,'');const currLength=cleanedText.length;const maxLength=el.getAttribute('maxlength')||el.maxLength;fb.textContent=`${currLength} / ${maxLength}`}
static #setupNumberMask(el){el.addEventListener('input',e=>{e.target.value=e.target.value.replace(/\D/g,'').slice(0,el.maxLength)})}
static #setupPhoneMask(el){const formats={US:'(000) 000-0000',DSN:'000-000-0000',UK:'00000 000000',FR:'00 00 00 00 00',DE:'0000 0000000',JP:'000-0000-0000',IN:'00000 00000',CN:'000 0000 0000',KR:'00-0000-0000',BR:'(00) 00000-0000',AR:'(000) 0000-0000',AU:'0000 000 000'};const fmt=formats[el.getAttribute('data-format')||'US']||el.getAttribute('data-format');const placeholder=fmt.replace(/0/g,'_');if(el.getAttribute('masker').includes('visible')){el.value=placeholder}
el.addEventListener('focus',e=>{if(!e.target.value){e.target.value=placeholder;setTimeout(()=>e.target.setSelectionRange(0,0),0)}});el.addEventListener('input',e=>this.#applyPatternMask(e,fmt,'0'));el.addEventListener('keydown',e=>{if(e.target.value===placeholder&&e.key==='Backspace'){e.target.value=''}});el.addEventListener('blur',e=>{if(e.target.value===placeholder&&!el.getAttribute('masker').includes('visible')){e.target.value=''}
const errorMessage=MaskerValidator.validate(e.target);if(errorMessage){MaskerValidator.displayError(e.target,errorMessage)}else{MaskerValidator.clearError(e.target)}})}
static #applyPatternMask(e,fmt,ph){const input=e.target;const digits=input.value.replace(/\D/g,'');let out='',di=0;for(let i=0;i<fmt.length&&di<digits.length;i++){out+=(fmt[i]===ph?digits[di++]:fmt[i])}
input.value=out}
static #setupEmailMask(el){const placeholder='___@___';const setPlaceholder=()=>{if(!el.value){el.value=placeholder;el.classList.add('placeholder-text')}};const removePlaceholder=()=>{if(el.value===placeholder){el.value=''}
el.classList.remove('placeholder-text')};el.addEventListener('focus',setPlaceholder);el.addEventListener('keydown',e=>{if(el.value===placeholder&&!['Tab','Shift','Control','Alt'].includes(e.key)){removePlaceholder()}});el.addEventListener('input',e=>this.#applyEmailMask(e));el.addEventListener('blur',()=>{if(el.value===placeholder){removePlaceholder()}
const errorMessage=MaskerValidator.validate(el);if(errorMessage){MaskerValidator.displayError(el,errorMessage)}else{MaskerValidator.clearError(el)}})}
static #applyEmailMask(e){const input=e.target;const validChars=/[^a-zA-Z0-9-._@]/g;input.value=input.value.replace(validChars,'').replace(/\s/g,'')}
static #setupTimeField(el){const maskAttr=el.getAttribute('masker')||'';const isBegin=maskAttr.includes('time begin');const isEnd=maskAttr.includes('time end');if(el.tagName==='INPUT'&&el.type==='time'){el.addEventListener('blur',e=>{const errorMessage=MaskerValidator.validate(e.target);if(errorMessage){MaskerValidator.displayError(e.target,errorMessage)}else{MaskerValidator.clearError(e.target)}});return}
if(isBegin||isEnd){const container=el.closest('td, .ms-dtinput');container.querySelectorAll('select').forEach(select=>{select.addEventListener('blur',()=>{const errorMessage=MaskerValidator.validate(el);const minutesSelect=MaskerValidator.findNextSelectWithPartialId(el,'Minutes');if(errorMessage){MaskerValidator.displayError(minutesSelect||el,errorMessage)}else{MaskerValidator.clearError(el);if(minutesSelect){MaskerValidator.clearError(minutesSelect)}}})})}}
static #limitInput(e){const t=e.target;if(t.maxLength<0)return;const allowed=['Backspace','Delete','ArrowLeft','ArrowRight','Tab','Home','End'];const currLength=t.textContent.length||t.value.length;if(currLength>=t.maxLength&&!allowed.includes(e.key)){e.preventDefault()}}}
document.addEventListener('DOMContentLoaded',()=>Masker.init())
